spring:
  profiles:
    active: ${geekoj.profiles.active}
  servlet:
    multipart:
      max-file-size: 10MB
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
  freemarker:
    enabled: false
    check-template-location: false
  cloud:
    nacos:
      discovery:
        enabled: true
      server-addr: ${geekoj.nacos.host}:${geekoj.nacos.port}
      username: ${geekoj.nacos.username}
      password: ${geekoj.nacos.password}
    sentinel:
      eager: true
      transport:
        dashboard: ${geekoj.sentinel.host}:${geekoj.sentinel.dashboard.port}
        port: ${geekoj.sentinel.api.port}
        client-ip: ${geekoj.service.ip}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${geekoj.mysql.host}:${geekoj.mysql.port}/${geekoj.mysql.database}
    username: ${geekoj.mysql.username}
    password: ${geekoj.mysql.password}
  data:
    redis:
      database: ${geekoj.redis.database}
      host: ${geekoj.redis.host}
      port: ${geekoj.redis.port}
      password: ${geekoj.redis.password}
  mail:
    host: ${geekoj.mail.host}
    username: ${geekoj.mail.username}
    password: ${geekoj.mail.password}
    port: ${geekoj.mail.port}
    default-encoding: UTF-8
    protocol: smtp # 协议
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
          port: ${spring.mail.port}
          auth: true
          starttls:
            enable: true
            required: true
# Dubbo 配置
dubbo:
  application:
    name: GeekOJ
    version: 1.0.0
  registry:
    address: nacos://${geekoj.nacos.host}:${geekoj.nacos.port}?username=${geekoj.nacos.username}&password=${geekoj.nacos.password}
  protocol:
    name: dubbo
    port: ${geekoj.dubbo.port}
  scan:
    base-packages: cc.geektip.geekoj.api
# RocketMQ 配置
rocketmq:
  producer:
    group: ${geekoj.rocketmq.group}
  name-server: ${geekoj.rocketmq.host}:${geekoj.rocketmq.port}
# MyBatis-Plus 配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
      id-type: auto
# Sa-Token 配置
sa-token:
  # 打开 RPC 调用鉴权
  check-same-token: true
  # 打开日志
  is-log: true
# Servlet 配置
server:
  servlet:
    context-path: /api/user
# GeekOJ 配置
geekoj:
  thread-pool:
    core-size: 20
    max-size: 200
    keep-alive-time: 10
  third-party:
    sms:
      apiUrl: ${geekoj.sms.apiUrl}
      appId: ${geekoj.sms.appId}
      appSecret: ${geekoj.sms.appSecret}
      templateId: ${geekoj.sms.templateId}
    oss:
      accessKey: ${geekoj.oss.accessKey}
      secretKey: ${geekoj.oss.secretKey}
      bucket: ${geekoj.oss.bucket}
      domain: ${geekoj.oss.domain}
    oauth:
      gitee:
        client_id: ${geekoj.oauth.gitee.client_id}
        client_secret: ${geekoj.oauth.gitee.client_secret}
        grant_type: authorization_code
        redirect_uri: ${geekoj.oauth.gitee.redirect_uri}
# SpringDoc 配置
springdoc:
  info:
    title: "GeekOJ 用户服务"
    version: "1.0.0"
    description: "GeekOJ 用户服务接口文档"
    contact:
      name: Bill Yu
      url: ${geekoj.base.url}
    license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: "cc.geektip.geekoj.userservice.controller"
knife4j:
  enable: true
  setting:
    language: zh_cn